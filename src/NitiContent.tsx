// Framer code components for content from ntigstrom/niti-content
// Each component fetches its data from GitHub raw URLs and renders with Rescale-like styles
// Author: Generated by Codex

import * as React from "react";
import { useEffect, useState } from "react";
import { Frame, addPropertyControls, ControlType } from "framer";
import { marked } from "marked";

const BASE_URL =
    "https://raw.githubusercontent.com/ntingstrom/niti-content/main/";

// Utility hook for fetching JSON or text data from GitHub raw URL
function useRemoteData<T>(path: string, isJSON: boolean = true) {
    const [data, setData] = useState<T | null>(null);
    const [error, setError] = useState<string | null>(null);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        setLoading(true);
        fetch(`${BASE_URL}${path}`)
            .then((res) => {
                if (!res.ok) throw new Error(res.statusText);
                return isJSON ? res.json() : res.text();
            })
            .then((d) => {
                setData(d as T);
                setLoading(false);
            })
            .catch((err) => {
                setError(err.message);
                setLoading(false);
            });
    }, [path]);

    return { data, error, loading };
}

/**
 * About component renders the about.md file with Markdown formatting.
 */
export function About() {
    const { data, error, loading } = useRemoteData<string>("about.md", false);

    if (loading) return <div>Loading...</div>;
    if (error || !data) return <div>Error loading about info.</div>;

    // Parse markdown to HTML and render
    const html = marked.parse(data);
    return (
        <div
            style={{ fontFamily: "Inter, sans-serif", lineHeight: 1.5 }}
            dangerouslySetInnerHTML={{ __html: html }}
        />
    );
}

/**
 * Projects component shows projects as cards.
 */
export function Projects() {
    const { data, error, loading } = useRemoteData<any[]>("projects.json");

    if (loading) return <div>Loading...</div>;
    if (error || !data) return <div>Error loading projects.</div>;

    return (
        <div style={{ display: "flex", flexWrap: "wrap", gap: 16 }}>
            {data.map((p) => (
                <div
                    key={p.title}
                    style={{
                        border: "1px solid #e5e5e5",
                        borderRadius: 8,
                        padding: 16,
                        width: 250,
                        boxShadow: "0 2px 4px rgba(0,0,0,0.05)",
                    }}
                >
                    <h3 style={{ margin: "0 0 8px" }}>{p.title}</h3>
                    <p style={{ margin: 0 }}>{p.description}</p>
                    <div style={{ marginTop: 8 }}>
                        {p.tags?.map((t: string) => (
                            <span
                                key={t}
                                style={{
                                    background: "#f0f0f0",
                                    borderRadius: 4,
                                    padding: "2px 6px",
                                    fontSize: 12,
                                    marginRight: 4,
                                }}
                            >
                                {t}
                            </span>
                        ))}
                    </div>
                    {p.url && (
                        <div style={{ marginTop: 8 }}>
                            <a href={p.url}>Läs mer</a>
                        </div>
                    )}
                </div>
            ))}
        </div>
    );
}

/**
 * Articles component lists article entries with title, date and summary.
 */
export function Articles() {
    const { data, error, loading } = useRemoteData<any[]>("articles.json");

    if (loading) return <div>Loading...</div>;
    if (error || !data) return <div>Error loading articles.</div>;

    return (
        <div style={{ display: "grid", gap: 24 }}>
            {data.map((a) => (
                <div key={a.title}>
                    <h3 style={{ marginBottom: 4 }}>{a.title}</h3>
                    <small style={{ color: "#666" }}>{a.published}</small>
                    <p>{a.summary}</p>
                    {a.url && (
                        <div>
                            <a href={a.url}>Läs mer</a>
                        </div>
                    )}
                </div>
            ))}
        </div>
    );
}

/**
 * YouTubeVideos component embeds YouTube videos listed in youtube.json.
 */
export function YouTubeVideos() {
    const { data, error, loading } = useRemoteData<any[]>("youtube.json");

    if (loading) return <div>Loading...</div>;
    if (error || !data) return <div>Error loading videos.</div>;

    return (
        <div style={{ display: "flex", flexWrap: "wrap", gap: 16 }}>
            {data.map((v) => (
                <div key={v.videoId} style={{ width: 320 }}>
                    <div style={{ position: "relative", paddingTop: "56.25%" }}>
                        <iframe
                            src={`https://www.youtube.com/embed/${v.videoId}`}
                            style={{
                                position: "absolute",
                                top: 0,
                                left: 0,
                                width: "100%",
                                height: "100%",
                                border: 0,
                            }}
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                            allowFullScreen
                            title={v.title}
                        />
                    </div>
                    <h4 style={{ margin: "8px 0 4px" }}>{v.title}</h4>
                    <p style={{ margin: 0 }}>{v.description}</p>
                </div>
            ))}
        </div>
    );
}

// Optionally export a parent component to showcase all sections together.
export function NitiContent() {
    return (
        <div style={{ display: "grid", gap: 40 }}>
            <About />
            <h2>Projekt</h2>
            <Projects />
            <h2>Artiklar</h2>
            <Articles />
            <h2>YouTube</h2>
            <YouTubeVideos />
        </div>
    );
}

export default NitiContent;
